#!/usr/bin/env node

// scorch
//
// use underscore to change a file (get it!?!)
//
// Copyright 2013 E14N https://e14n.com/
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

var fs = require("fs"),
    os = require("os"),
    path = require("path"),
    _ = require("underscore"),
    async = require("async");

var getTemplate = function(templateFile, callback) {

    async.waterfall([
        function(callback) {
            fs.readFile(templateFile, {encoding: "utf8"}, callback);
        },
        function(code, callback) {
            try {
                callback(null, _.template(code));
            } catch (err) {
                callback(err, null);
            }
        }
    ], callback);
};

var getData = function(dataFile, callback) {

    async.waterfall([
        function(callback) {
            fs.readFile(dataFile, {encoding: "utf8"}, callback);
        },
        function(json, callback) {
            var obj;
            try {
                obj = JSON.parse(json);
                if (!_.isObject(obj)) {
                    throw new Error("Data file must contain a JSON object");
                }
                callback(null, obj);
            } catch (err) {
                callback(err, null);
            }
        }
    ], callback);
};

var scorch = function(templateFile, dataFile, callback) {

    async.waterfall([
        function(callback) {
            async.parallel([
                function(callback) {
                    getTemplate(templateFile, callback);
                },
                function(callback) {
                    getData(dataFile, callback);
                }
            ], callback);
        },
        function(results, callback) {
            var template = results[0],
                data = results[1];
            try {
                callback(null, template(data));
            } catch (err) {
                callback(err, null);
            }
        }
    ], callback);
};

var main = function(argv, callback) {

    if (argv.length != 4) {
        callback(new Error("Usage: scorch <template> <data> > <result>"), null);
    }

    scorch(argv[2], argv[3], callback);
};

main(process.argv, function(err, result) {
    if (err) {
        console.log(err);
        process.exit(-1);
    } else {
        console.log(result);
    }
});
